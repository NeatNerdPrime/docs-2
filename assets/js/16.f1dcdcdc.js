(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{167:function(e,a,s){"use strict";s.r(a);var t=s(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"administration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#administration","aria-hidden":"true"}},[e._v("#")]),e._v(" Administration")]),e._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#updating-pixelfed"}},[e._v("Updating Pixelfed")])]),s("li",[s("a",{attrs:{href:"#admin-user"}},[e._v("Admin user")])]),s("li",[s("a",{attrs:{href:"#delete-a-user"}},[e._v("Delete a user")])]),s("li",[s("a",{attrs:{href:"#fix-accounts-with-reserved-names"}},[e._v("Fix accounts with reserved names")])]),s("li",[s("a",{attrs:{href:"#remove-unused-media"}},[e._v("Remove unused Media")])])])]),s("p"),e._v(" "),s("h2",{attrs:{id:"updating-pixelfed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-pixelfed","aria-hidden":"true"}},[e._v("#")]),e._v(" Updating Pixelfed")]),e._v(" "),s("p",[e._v("After you have installed Pixelfed, you may update to the latest commits by pulling the dev branch and doing necessary updates/migration/caching:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{attrs:{class:"token function"}},[e._v("git")]),e._v(" pull origin dev\n$ composer "),s("span",{attrs:{class:"token function"}},[e._v("install")]),e._v("\n$ php artisan config:cache\n$ php artisan route:cache\n$ php artisan migrate --force\n")])])]),s("h2",{attrs:{id:"admin-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#admin-user","aria-hidden":"true"}},[e._v("#")]),e._v(" Admin user")]),e._v(" "),s("p",[e._v("You can give a user the admin role with the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ php artisan user:admin username_here\n")])])]),s("p",[e._v("Or you can do this with the tinker REPL:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ php artisan tinker\n\n>>> $username = 'username_here';\n\n>>> $user = User::whereUsername($username)->firstOrFail();\n\n>>> $user->is_admin = true;\n\n>>> $user->save();\n")])])]),s("h2",{attrs:{id:"delete-a-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete-a-user","aria-hidden":"true"}},[e._v("#")]),e._v(" Delete a user")]),e._v(" "),s("p",[e._v("Delete a user account with the following command:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("php artisan user:delete username_here\n")])])]),s("h2",{attrs:{id:"fix-accounts-with-reserved-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fix-accounts-with-reserved-names","aria-hidden":"true"}},[e._v("#")]),e._v(" Fix accounts with reserved names")]),e._v(" "),s("p",[e._v("You can run this command to fix accounts created before that username was reserved.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ php artisan fix:usernames\n")])])]),s("h2",{attrs:{id:"remove-unused-media"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove-unused-media","aria-hidden":"true"}},[e._v("#")]),e._v(" Remove unused Media")]),e._v(" "),s("p",[e._v("With this command you can trigger the garbage collection on the media files. This frees up disk space. All files being older than one hour and which are not used in any status are removed.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ php artisan media:gc\n")])])])])}],!1,null,null,null);r.options.__file="administration.md";a.default=r.exports}}]);